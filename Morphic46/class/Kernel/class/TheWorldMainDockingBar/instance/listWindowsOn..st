listWindowsOn: menu	| windows |	windows := SortedCollection sortBlock: [:winA :winB |		winA model name = winB model name			ifTrue: [winA label < winB label]			ifFalse: [winA model name < winB model name]].	windows addAll: self allVisibleWindows.	windows ifEmpty: [ 		menu addItem: [ :item | 			item				contents: 'No Windows' translated;				isEnabled: false ] ].	windows do: [ :each |		menu addItem: [ :item |			item 				contents: (self windowMenuItemLabelFor: each);				icon: (self colorIcon: each model defaultBackgroundColor);				target: each;				selector: #comeToFront;				subMenuUpdater: self				selector: #windowMenuFor:on:				arguments: { each };				action: [ each activateAndForceLabelToShow; expand ] ] ].	menu		addLine;		add: 'Close all windows' target: self selector: #closeAllWindowsUnsafe;		addItem: [:item | item			contents: 'Close all windows without changes';			target: self;			icon: MenuIcons smallBroomIcon;			selector: #closeAllWindows];		add: 'Close all windows but workspaces' target: self selector: #closeAllWindowsButWorkspaces.