mouseDown: evt	| wasActive |	(wasActive := self isActive) ifFalse: [		evt hand releaseKeyboardFocus.		self activate].	wasActive		ifFalse: [				"the window was locked, thus we got the event.			re-send it now that the window is unlocked again"			evt wasHandled: false.			model windowActiveOnFirstClick				ifTrue: [self processEvent: evt] "re-dispatch to any submorphs"				ifFalse: [label processEvent: evt]. "dispatch to label so dragging works"			]		ifTrue: [			evt hand 				waitForClicksOrDrag: self 				event: evt 				selectors: { nil. nil. nil. #startDragFromLabel: }				threshold: HandMorph dragThreshold.			].	evt wasHandled: true.