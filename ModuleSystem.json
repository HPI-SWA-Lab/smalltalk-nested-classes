{	"className": "?",	"moduleName": "ModuleSystem",	"metaclassSpec": {		"classDict": {			"VersionableModule": {				"className": "? VersionableModule",				"metaclassSpec": {					"classDict": {											},					"className": "? VersionableModule",					"methodDict": {											}				},				"classDict": {									},				"methodDict": {									}			},			"ClassGenerator": {				"className": "? ClassGenerator",				"metaclassSpec": {					"classDict": {											},					"className": "? ClassGenerator",					"methodDict": {						"expectedTypeDescriptor": {							"source": "expectedTypeDescriptor\r\t^ super expectedTypeDescriptor,							 #(ClassGenerator)",							"protocol": "foo"						},						"for: ": {							"source": "for:  aClass\r\t^ self new\r\t\ttarget:  aClass;\r\t\tInner",							"protocol": "foo"						}					}				},				"classDict": {					"Inner": {						"className": "(a ? ClassGenerator) Inner",						"metaclassSpec": {							"classDict": {															},							"className": "(a ? ClassGenerator) Inner",							"methodDict": {															}						},						"classDict": {													},						"methodDict": {													}					}				},				"methodDict": {					"target: ": {						"source": "target:  aClass\r\ttarget : = aClass.",						"protocol": "foo"					},					"target": {						"source": "target\r\t^ target",						"protocol": "foo"					},					"Inner": {						"source": "Inner\r\t< class >\r\t^ target subclass",						"protocol": "foo"					}				}			},			"Versionable": {				"className": "? Versionable",				"metaclassSpec": {					"classDict": {											},					"className": "? Versionable",					"methodDict": {											}				},				"classDict": {					"Inner": {						"className": "(a ? Versionable) Inner",						"metaclassSpec": {							"classDict": {															},							"className": "(a ? Versionable) Inner",							"methodDict": {															}						},						"classDict": {													},						"methodDict": {							"latest": {								"source": "latest\r\t| versions |\r\tversions : = ((self class selectors select:  [									 : sel | sel beginsWith:  #v 								]) \r\t\tcollect:  [									 : ver | (ver findTokens:  #v) first asInteger 								]) sorted.\r\t^ self perform:  (#v,								 versions last) asSymbol",								"protocol": "foo"							}						}					}				},				"methodDict": {					"Inner": {						"source": "Inner\r\t< class >\r\t^ target subclass",						"protocol": "foo"					}				}			},			"Module": {				"className": "? Module",				"metaclassSpec": {					"classDict": {											},					"className": "? Module",					"methodDict": {											}				},				"classDict": {									},				"methodDict": {									}			}		},		"className": "?",		"methodDict": {			"VersionableModule": {				"source": "VersionableModule\r\t< class >\r\t^ Module subclass\r\t\t<< Versionable",				"protocol": "foo"			},			"ClassGenerator": {				"source": "ClassGenerator\r\t< class >\r\t^ Object subclassWithInstVars:  'target'",				"protocol": "foo"			},			"Versionable": {				"source": "Versionable\r\t< class >\r\t\" a mixin adding convenience methods for accessing versioning nested classes \"\r\r\t^ ClassGenerator subclass",				"protocol": "foo"			},			"Module": {				"source": "Module\r\t< class >\r\t\" represents a top-level class \"\r\r\t^ Object subclass",				"protocol": "foo"			}		}	},	"classDict": {			},	"methodDict": {			}}